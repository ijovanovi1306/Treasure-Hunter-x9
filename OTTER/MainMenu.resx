<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAAOxAAADsQBlSsOGwAAEkNJREFUeF7t3dGZ47YV
        hmFXk0JShXtIDS4hHaQCV+AGXEAKSAF7n3vn5Oe3es4IIgloNNLszvdezf7gIbUCQJCYdfKLJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEn6bH799dd//etff/7557///e+/4r///W/9XEnl1cpxkqTn
        u9ya369OxUl/+eW3336rW/wff/xRYfn27RsHxX3LAMWL6hLUz/nPf/5DZfztb3+j4S7/+Mc/6m/KufbV
        91PfGDVvcUQQraAyiAY/bmdtKA6iRRQH0YDmIFpBZRANaI4aOaQrKH47GUv9kYZ3uzoz6aKbHf0R4/Al
        6uP9/vvv9WnrM28fvu4q9ffam+N6veqtraver07FSRenR434f/7zn1Tu4+hFS/fWv//975R9N/PB9tRk
        4CwT9i5EcxCtoDKIBjTP+TyddUFxEC2iOIgGNAfRCiqDaEBz1K2TdAXFP+ZCSNucyXH4ZKcPvvWx73vE
        0cf6oBlCtKJm/vHrF8ctWrq31sGUfVdPoLQtqgdAThH1bFhJnb+mQak5XD/3L3/v705zEK2gMogGNK/4
        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
        eKcvLhwaRGc4Oj6usyZxmSBaRHEQ7XhOR6yOzLoWld+9ZCH8f/9NGzuaswTRGY6O1ZFT3VGdQvHh7k6f
        qvMbpDVU+utmcRX8gdGHQTSBgiA609+0bm5B0LauZh2neLsvOrO1NdqWuourkd2XyVJTqN4a6762Tf5q
        rT9eLYGlcur39SfTTU2zy5nrG6ufr848OfE4OojOPKezJlEZRIsoDqJ9T+iIOgPRtN4j5SUL4ZKxo2kI
        ojOn4/BAX6WOv/D6qBwX44XqnpDO//8Er1PVp+r3mU1d7r4bjj4FujGIJlAQRGdqAFGw828KaFtXA3Q7
        Q/1AdO9eyqZPv6sp1N84Z9SEmVkFN/0rOlWvI5OPnxQE0ZkndNY8KoNoEcVBdOijO+JqUM24er/5Igvh
        6Tjc0wurg07fJuv5laMzZ6+O7zeWUR1/R4fqc6Ezg2gCBUF0pr9pjUOt0LbuMuX6aH7P0OyvfeOCWq3j
        O99NNXVXHxLr79KfZG/aJt7p3L6gLIjOPKGz5lEZRIsoDqIzH9oR9w3OqqL+yyyEp+PwpnouoSZmhlyd
        uW9016MwDVFnoOGtug/U3WB+AEg/m1rhag7U0lu3pMsUqh/qjxW+c3rUTK67Xj9z3QUecmYtsSNULgth
        rXyX3ncjVJIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZKkD/XLL/8DU+m/xynv6gYAAAAASUVORK5C
        YII=
</value>
  </data>
</root>